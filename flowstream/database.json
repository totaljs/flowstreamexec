{
    "tms": {
        "paused": false,
        "id": "tms",
        "reference": "",
        "author": "",
        "group": "",
        "icon": "ti ti-microchip",
        "color": "",
        "version": "",
        "readme": "",
        "url": "https://www.totaljs.com",
        "name": "TMS",
        "components": {
            "cktdg2lc1": "<script total>\n\n\texports.name = 'Code';\n\texports.group = 'Common';\n\texports.version = '2';\n\texports.icon = 'ti ti-code';\n\texports.author = 'Peter Širka';\n\texports.config = { outputs: 1, code: '// instance {FlowStreamInstance};\\n// $ {FlowStreamMessage};\\n// vars {Object};\\n// repo {Object};\\n// data {String/Number/Boolean/Date/Buffer/Object};\\n// $.send([output], data);\\n// $.destroy();\\n// $.throw(err);\\n\\n// IMPORTANT: If you do not perform re-send, you need to destroy this message via $.destroy() method\\n// IMPORTANT: methods $.send(), $.destroy() and $.throw() can be executed only once\\n\\n// $.send(\\'output\\', data);\\n$.destroy();' };\n\texports.inputs = [{ id: 'input', name: 'Input' }];\n\texports.outputs = [{ id: 'output', name: 'Output' }];\n\n\texports.make = function(instance, config) {\n\n\t\tvar fn;\n\n\t\tinstance.message = function($) {\n\t\t\tif (fn) {\n\t\t\t\ttry {\n\t\t\t\t\tvar send = data => $.send('output', data);\n\t\t\t\t\tfn($.data, instance, $, $, F.require, send, $.repo, $.vars, $.data);\n\t\t\t\t} catch (e) {\n\t\t\t\t\t$.destroy();\n\t\t\t\t\t$.throw(e);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tinstance.configure = function() {\n\t\t\ttry {\n\t\t\t\tif (config.code) {\n\t\t\t\t\tinstance.status(1);\n\t\t\t\t\tfn = new Function('value', 'instance', '$', 'message', 'require', 'send', 'repo', 'vars', 'data', config.code);\n\t\t\t\t} else {\n\t\t\t\t\tinstance.status(0);\n\t\t\t\t\tfn = null;\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tfn = null;\n\t\t\t\tinstance.throw('Code: ' + e.message);\n\t\t\t}\n\t\t};\n\n\t\tinstance.close = function() {\n\t\t\tfn = null;\n\t\t};\n\n\t\tinstance.configure();\n\n\t};\n\n</script>\n\n<readme>\nThis component executes a custom JavaScript code as it is.\n</readme>\n\n<settings>\n\t<div class=\"padding\">\n\t\t<div data---=\"codemirror__?.code__type:javascript;minheight:300;parent:.ui-largeform-body;tabs:true;trim:true\" class=\"m\">Code</div>\n\t</div>\n</settings>\n\n<body>\n\t<header>\n\t\t<i class=\"far fa-play-circle\"></i>Code\n\t</header>\n</body>",
            "cktdyw62s": "<script total>\n\n\texports.name = 'Exec';\n\texports.group = 'Triggers';\n\texports.version = '1';\n\texports.icon = 'ti ti-running';\n\texports.author = 'Peter Širka';\n\texports.config = {};\n\texports.outputs = [{ id: 'output', name: 'Output' }];\n\n\texports.make = function(instance) {\n\t\tinstance.message = function($) {\n\t\t\t$.send('output');\n\t\t};\n\t};\n\n</script>\n\n<readme>\nThe component is extraordinary because it must be executed directly from the source code via the `flowstream.exec()` method. The component triggers received data into the Flow.\n\n```js\nvar opt = {};\nopt.id = 'ID_OF_EXEC_INSTANCE';\nopt.data = { custom: 'data' };\nopt.callback = function(err, msg) {\n\t// msg.uid;\n\t// msg.ref;\n\t// msg.repo {Object}\n\t// msg.data {Object}\n\t// msg.cloned {Number} how many times was the message cloned?\n\t// msg.duration {Number} in milliseconds\n};\n\n// optional:\n// opt.vars = {};    --> custom variables\n// opt.repo = {};    --> custom repository data and this data will be returned in the callback\n// opt.uid;          --> for storing some unique ID\n// opt.ref;          --> for storing some reference ID\nflowinstance.exec(opt);\n```\n</readme>\n\n<body>\n\t<header>\n\t\t<i class=\"fas fa-running\"></i>Exec\n\t</header>\n</body>",
            "cktdzvixa": "<script total>\n\n\texports.name = 'End';\n\texports.group = 'Common';\n\texports.version = '1';\n\texports.icon = 'ti ti-skull-crossbones';\n\texports.author = 'Peter Širka';\n\texports.config = {};\n\texports.inputs = [{ id: 'input', name: 'Input' }];\n\n\texports.make = function(instance) {\n\t\tinstance.message = function($) {\n\t\t\t$.destroy();\n\t\t};\n\t};\n\n</script>\n\n<readme>\nThe component destroys the incoming message.\n</readme>\n\n<body>\n\t<header>\n\t\t<i class=\"fas fa-skull-crossbones\"></i>End\n\t</header>\n</body>"
        },
        "design": {
            "iktdyslc8": {
                "id": "iktdyslc8",
                "config": {
                    "outputs": 1,
                    "code": "// instance {FlowStreamInstance};\n// $ {FlowStreamMessage};\n// vars {Object};\n// repo {Object};\n// data {String/Number/Boolean/Date/Buffer/Object};\n// $.send([output], data);\n// $.destroy();\n// $.throw(err);\n\n// IMPORTANT: If you do not perform re-send, you need to destroy this message via $.destroy() method\n// IMPORTANT: methods $.send(), $.destroy() and $.throw() can be executed only once\n\nif (typeof(data) === 'string')\n\tdata = data.toUpperCase();\n\n$.send('output', data);"
                },
                "x": 598,
                "y": 260,
                "component": "cktdg2lc1",
                "connections": {
                    "output": [
                        {
                            "id": "iktdzvkua",
                            "index": "input"
                        }
                    ]
                },
                "meta": {
                    "icon": "fa fa-code",
                    "group": "Common",
                    "name": "Code",
                    "inputs": [
                        {
                            "id": "input",
                            "name": "Input"
                        }
                    ],
                    "outputs": [
                        {
                            "id": "output",
                            "name": "Output"
                        }
                    ]
                }
            },
            "iktdyw98g": {
                "id": "iktdyw98g",
                "config": {},
                "x": 196,
                "y": 183,
                "component": "cktdyw62s",
                "connections": {
                    "output": [
                        {
                            "id": "iktdyslc8",
                            "index": "input"
                        }
                    ]
                },
                "meta": {
                    "icon": "fas fa-running",
                    "group": "Triggers",
                    "name": "Exec",
                    "outputs": [
                        {
                            "id": "output",
                            "name": "Output"
                        }
                    ]
                }
            },
            "iktdzvkua": {
                "id": "iktdzvkua",
                "config": {},
                "x": 1005,
                "y": 285,
                "component": "cktdzvixa",
                "connections": {},
                "meta": {
                    "icon": "fas fa-skull-crossbones",
                    "group": "Common",
                    "name": "End",
                    "inputs": [
                        {
                            "id": "input",
                            "name": "Input"
                        }
                    ]
                }
            }
        },
        "variables": {},
        "sources": {},
        "dtcreated": "2021-09-09T21:28:04.120Z",
        "dtupdated": "2021-09-10T06:45:54.847Z",
        "size": 5516
    },
    "variables": {}
}